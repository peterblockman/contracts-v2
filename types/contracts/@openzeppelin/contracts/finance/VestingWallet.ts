/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type BN from "bn.js";
import type { ContractOptions } from "web3-eth-contract";
import type { EventLog } from "web3-core";
import type { EventEmitter } from "events";
import type {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "../../../../types";

export interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export type ERC20Released = ContractEventLog<{
  token: string;
  amount: string;
  0: string;
  1: string;
}>;
export type EtherReleased = ContractEventLog<{
  amount: string;
  0: string;
}>;

export interface VestingWallet extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): VestingWallet;
  clone(): VestingWallet;
  methods: {
    beneficiary(): NonPayableTransactionObject<string>;

    duration(): NonPayableTransactionObject<string>;

    "release(address)"(token: string): NonPayableTransactionObject<void>;

    "release()"(): NonPayableTransactionObject<void>;

    "released()"(): NonPayableTransactionObject<string>;

    "released(address)"(token: string): NonPayableTransactionObject<string>;

    start(): NonPayableTransactionObject<string>;

    "vestedAmount(uint64)"(
      timestamp: number | string | BN
    ): NonPayableTransactionObject<string>;

    "vestedAmount(address,uint64)"(
      token: string,
      timestamp: number | string | BN
    ): NonPayableTransactionObject<string>;
  };
  events: {
    ERC20Released(cb?: Callback<ERC20Released>): EventEmitter;
    ERC20Released(
      options?: EventOptions,
      cb?: Callback<ERC20Released>
    ): EventEmitter;

    EtherReleased(cb?: Callback<EtherReleased>): EventEmitter;
    EtherReleased(
      options?: EventOptions,
      cb?: Callback<EtherReleased>
    ): EventEmitter;

    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };

  once(event: "ERC20Released", cb: Callback<ERC20Released>): void;
  once(
    event: "ERC20Released",
    options: EventOptions,
    cb: Callback<ERC20Released>
  ): void;

  once(event: "EtherReleased", cb: Callback<EtherReleased>): void;
  once(
    event: "EtherReleased",
    options: EventOptions,
    cb: Callback<EtherReleased>
  ): void;
}
